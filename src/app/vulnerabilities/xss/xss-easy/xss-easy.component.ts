import { Component } from '@angular/core';
import { AuthService } from '../../../services/auth.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-xss-easy',
  templateUrl: './xss-easy.component.html',
  styleUrls: ['./xss-easy.component.scss']
})
export class XssEasyComponent {
  payload: string = '';
  output: string = '';
  flagObtained: boolean = false;
  enteredFlag: string = '';
  flagValidationMessage: string | null = null;
  isLoading = false;
  showPopup = false;
  private readonly correctFlag: string = 'FLAG{XSS_SUCCESS}';

  constructor(private authService: AuthService, private router: Router) {}

  onSubmit(event: Event) {
    event.preventDefault();
    this.output = this.payload;
    setTimeout(() => this.checkForFlag(), 100); // Damos un pequeño retraso para que el payload se ejecute
  }

  checkForFlag() {
    if (this.payload.includes('alert')) {
      this.flagObtained = true;
      alert(this.correctFlag); // Mostramos la flag en un alert
    }
  }

  onValidateFlag(event: Event) {
    event.preventDefault();
    if (this.enteredFlag === this.correctFlag) {
      this.flagValidationMessage = '¡Flag validada correctamente! Avanzando al siguiente nivel...';
      this.showPopup = true;

      setTimeout(() => {
        this.showPopup = false;
        this.isLoading = true;

        this.authService.addCompletedLevel('xss-easy').subscribe(
          () => {
            setTimeout(() => {
              this.isLoading = false;
              this.router.navigate(['/xss-medium']);
            }, 2000); // Simulación del tiempo de carga del spinner
          },
          error => {
            this.isLoading = false;
            this.flagValidationMessage = 'Error al validar el nivel. Inténtalo de nuevo.';
          }
        );
      }, 2000); // Duración del popup de felicitaciones
    } else {
      this.flagValidationMessage = 'Flag incorrecta. Inténtalo de nuevo.';
    }
  }
}
