import { Component, OnInit } from '@angular/core';
import { AuthService } from '../../../services/auth.service';
import { Router } from '@angular/router';
import { HttpClient } from '@angular/common/http';
import { environment } from '../../../../../environments/environment'; // Asegúrate de que la ruta es correcta

@Component({
  selector: 'app-xss-medium',
  templateUrl: './xss-medium.component.html',
  styleUrls: ['./xss-medium.component.scss']
})
export class XssMediumComponent implements OnInit {
  comment: string = '';
  comments: any[] = [];
  flagObtained: boolean = false;
  enteredFlag: string = '';
  flagValidationMessage: string | null = null;
  private readonly correctFlag: string = 'FLAG{XSS_MEDIUM_SUCCESS}';

  constructor(private authService: AuthService, private router: Router, private http: HttpClient) {}

  ngOnInit(): void {
    this.loadComments();
  }

  onSubmitComment(event: Event) {
    event.preventDefault();
    this.http.post(`${environment.apiUrl}/comments`, { content: this.comment }).subscribe(() => {
      this.loadComments();
      this.comment = '';
    });
  }

  loadComments() {
    this.http.get<any[]>(`${environment.apiUrl}/comments`).subscribe(data => {
      this.comments = data;
      setTimeout(() => this.checkForFlag(), 100); // Damos un pequeño retraso para que el payload se ejecute
    });
  }

  checkForFlag() {
    if (document.body.innerHTML.includes(this.correctFlag)) {
      this.flagObtained = true;
      alert(this.correctFlag);
    }
  }

  onValidateFlag(event: Event) {
    event.preventDefault();
    if (this.enteredFlag === this.correctFlag) {
      this.flagValidationMessage = '¡Flag validada correctamente! Avanzando al siguiente nivel...';
      this.authService.addCompletedLevel('xss-medium');
      setTimeout(() => {
        this.router.navigate(['/xss-hard']);
      }, 2000); // Redirige después de 2 segundos
    } else {
      this.flagValidationMessage = 'Flag incorrecta. Inténtalo de nuevo.';
    }
  }
}
