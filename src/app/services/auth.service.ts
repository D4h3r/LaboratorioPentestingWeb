import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class AuthService {
  
  constructor(private http: HttpClient) { }

    // Base URL for the easy level
    private baseUrlEasy = 'http://localhost:3000/sql-easy';
  
    // Base URL for the medium level
    private baseUrlMedium = 'http://localhost:3000/sql-medium';



//  ################# SQL EASY


  loginEasy(username: string, password: string) {
    const url = 'http://localhost:3000/sql-easy/login';
    return this.http.post(url, { username, password });
  }

  listTablesEasy(): Observable<any> {
    const url = `${this.baseUrlEasy}/list-tables`;
    return this.http.get(url);
  }

  searchUsersEasy(searchTerm: string): Observable<any> {
    const url = `${this.baseUrlEasy}/search-users?search=${searchTerm}`;
    return this.http.get(url);
  }

  getSQLiteVersion(): Observable<any> {
    return this.http.get('http://localhost:3000/sql-easy/sqlite-version');
  }

  getAllUsers(): Observable<any> {
    return this.http.get('http://localhost:3000/sql-easy/users');
  }





// ################# SQL MEDIUM



  loginMedium(username: string, password: string): Observable<any> {
    const url = `${this.baseUrlMedium}/login`;
    return this.http.post(url, { username, password });
  }

  searchUsersMedium(searchTerm: string): Observable<any> {
    const url = `${this.baseUrlMedium}/search-users?search=${encodeURIComponent(searchTerm)}`;
    return this.http.get(url);
  }

  // Add new method to get user info at medium difficulty
  getUserInfoMedium(userId: string): Observable<any> {
    const url = `${this.baseUrlMedium}/user-info?id=${encodeURIComponent(userId)}`;
    return this.http.get(url);
  }

}