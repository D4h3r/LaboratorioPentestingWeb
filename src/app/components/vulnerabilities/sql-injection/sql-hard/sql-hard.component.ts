import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { AuthService } from '../../../../services/auth.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-sql-hard',
  templateUrl: './sql-hard.component.html',
  styleUrls: ['./sql-hard.component.scss']
})
export class SqlHardComponent {
  queryResult: any;
  flag: string = '';
  message: string = '';
  isLoading = false;
  showPopup = false;

  constructor(private http: HttpClient, private authService: AuthService, private router: Router) {}

  executeQuery(): void {
    this.http.get<any>('http://localhost:3000/api/sql-hard/nested-query').subscribe(response => {
      if (response.success) {
        this.queryResult = response.data;
        const userCount = response.data[0].userCount;
        const problemCount = response.data[0].problemCount;
        this.flag = `${userCount}-${problemCount}`;
      } else {
        this.message = response.message;
      }
    });
  }

  validateFlag(): void {
    this.authService.getCurrentUser().subscribe(user => {
      const userId = user.id;
      this.isLoading = true;
      this.http.post<any>('http://localhost:3000/api/sql-hard/validate-nested-flag', { userId, flag: this.flag }).subscribe(response => {
        this.isLoading = false;
        if (response.success) {
          this.showPopup = true;
          this.message = response.message;
          this.authService.addCompletedLevel('sql-hard').subscribe(
            () => {
              setTimeout(() => {
                this.showPopup = false;
                this.isLoading = true;
                setTimeout(() => {
                  this.router.navigate(['/completed-levels']).then(success => {
                    this.isLoading = false;
                    if (success) {
                      console.log('Redirección exitosa a /completed-levels');
                    } else {
                      console.error('Fallo en la redirección a /completed-levels');
                    }
                  });
                }, 2000);
              }, 2000);
            },
            error => {
              console.error('Error al guardar el nivel completado:', error);
              this.message = 'Error al guardar el nivel completado. Inténtalo de nuevo.';
            }
          );
        } else {
          this.message = response.message;
        }
      });
    });
  }
}
