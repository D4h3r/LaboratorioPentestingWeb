import { Component } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Router } from '@angular/router';
import { AuthService } from '../../../../services/auth.service';

interface ServerResponse {
  success: boolean;
  data?: any;
  message?: string;
}

@Component({
  selector: 'app-sql-medium',
  templateUrl: './sql-medium.component.html',
  styleUrls: ['./sql-medium.component.scss']
})
export class SqlMediumComponent {
  injectQuery: string = '';
  injectionResults: any;
  flag: string = '';
  flagMessage: string = '';

  constructor(private http: HttpClient, private authService: AuthService, private router: Router) {}

  executeQuery(): void {
    this.http.post<ServerResponse>('http://localhost:3000/api/sql-medium/execute-sql', { query: this.injectQuery }).subscribe(response => {
      if (response.success) {
        this.injectionResults = response.data;
      } else {
        this.flagMessage = response.message || 'Error executing query';
      }
    });
  }
  

  validateFlag(): void {
    this.authService.getCurrentUser().subscribe(user => {
      const userId = user.id;
      this.http.post<ServerResponse>('http://localhost:3000/api/sql-medium/validate-flag', { userId, flag: this.flag }).subscribe(response => {
        this.flagMessage = response.message || 'Error validating flag';
        if (response.success) {
          // Redirigir a sql-hard después de la validación exitosa
          this.router.navigate(['/sql-hard']);
        }
      });
    });
  }
}
