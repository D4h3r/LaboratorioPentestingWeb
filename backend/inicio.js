const express = require('express');
const router = express.Router();
const db = require('../backend/db'); // Asegúrate de que la ruta sea correcta
const Usuario = require('../models/usuario');

// Ruta para el registro de usuarios
router.post('/register', (req, res) => {
  const { name, email, password, confirmPassword } = req.body;
  
  console.log('Datos recibidos para el registro:', req.body); // Agrega este log
  
  if (password !== confirmPassword) {
    return res.status(400).json({ success: false, message: "Passwords do not match" });
  }
  
  Usuario.create(name, email, password, 0, (err) => {
    if (err) {
      console.error('Error al registrar el usuario:', err.message);
      return res.status(500).json({ success: false, message: "Error al registrar el usuario", error: err.message });
    }
    res.json({ success: true, message: 'Usuario registrado con éxito' });
  });
});


// Ruta para el inicio de sesión
router.post('/login', (req, res) => {
  let correo = req.body.correo;
  let password = req.body.password;

  Usuario.findByEmailAndPassword(correo, password, (err, usuario) => {
    if (err) {
      console.error('Error en la base de datos:', err.message);
      return res.status(500).json({ success: false, message: "Error en la consulta", error: err.message });
    }
    if (usuario) {
      res.json({ success: true, message: 'Inicio de sesión exitoso', usuario });
    } else {
      res.json({ success: false, message: 'Credenciales incorrectas' });
    }
  });
});

// Ruta para actualizar los niveles completados
router.post('/update-completed-levels', (req, res) => {
  const { userId, level } = req.body;
  Usuario.updatePointsAndLevels(userId, 0, level, (err) => {
    if (err) {
      return res.status(500).json({ success: false, message: 'Error actualizando niveles completados', error: err.message });
    }
    res.json({ success: true, message: 'Nivel completado actualizado' });
  });
});


module.exports = router;
